var TPLBLOB = TPLBLOB || {}; TPLBLOB["layout.html"] = "AQ0g8AmCWBuzUgXgEQGsCmBPANtAzgC4oB84A9DLCQFA1A==";TPLBLOB["views-keylist.html"] = "FAHgzgpgxgLglgewHYAIoBsCGYwF4BEUyMmcSEATvgHzAr0ogAmcAbmljgRQgO410GQ5mw7Y8hBOgC0ADzDSAjACY0U6QFsm0gGwChBhiABmCChtqGrRgBbLqAQSZMUSBDAggA9HcvWrIqx+/v4gWABGEOjUACpwMOieXhFR1IxkAA4ArjAoMACeGRAEHrIw+ChwTARuHtLwCRAVSJgaxfgNifhewSFGXixBgn1Gg9QgpSQUEJiure21TZXV+Iv1EGU03pOY05jjA2y9IyCZOXmF7eE5MMgVrJjoWe1OTBVVBJjO0tcwt0gVDDiAjhGCoUFIaQZChwDS7fLdY4BLymcxI+jeMbDAyBMRcSQyeRKVREGRaXT6PogXwAGQQUEeKDAtwomAA5hAUKw4BBeJQUNIUABrCD5FDoODMgWMACkuEqHg0YAAdIkkGyYDYUDK0iL8mAUKYskgmN5fNjrBNMOFEujQjKUAB9ZUzKA2AAU8QgSoANIbjbBEEhPQBKFAAb21dpOMAo4xgLiB+LWnSWTEwJGk6DAeoIIDllSjNFl8rgUcYXgTB1j0YCDoAviGANwoLxeJ0oV1ar1KqPAC3Ikg2iB2zFHbFjobeSCB5C0IA===";function TplBlob(name) { return TPLBLOB[name] ? LZString.decompressFromBase64(TPLBLOB[name]) : ""; }function IsTplBlob(name) { return TPLBLOB[name] ? true : false; }console.TplBlob = TplBlob; console.IsTplBlob = IsTplBlob;

function PGDatabase() {
    this.db = false;

    if (window.localStorage) {
        this.db = window.localStorage;
    }
}


PGDatabase.prototype.getKeyList = function() {
    var _list = [];

    if (this.db) {
        for (var i=0; i<this.db.length; i++) {
            _list.push(this.db.key(i));   
        }
    }

    return _list;
};

(function($, Backbone, Marionette, _) {

function _onDeviceReady() {
    alert("deviceready");
}


    // Bind any events that are required on startup. Common events are:
    // 'load', 'deviceready', 'offline', and 'online'.
document.addEventListener('deviceready', _onDeviceReady, false);

/**
 * vista marionette per inserire note e elencare i titoli delle note salvate
 */
var KeyListView = Backbone.Marionette.ItemView.extend({
    //el: "#key-list",
    template: _.template(TplBlob('views-keylist.html')),
    model: new Backbone.Model({title: '', note: ''}),
    serializeData: function() {
        console.log("serializzo");
        var db = new PGDatabase();
        return {items: db.getKeyList()};
    },
    ui: {
        noteTitle: '#note-title',
        noteText: '#note-text',
        addButton: '#add-button',
        viewNote: 'table .note-title'
    },
    events: {
        'click @ui.addButton': 'onAddNote',
        'click @ui.viewNote': 'onViewNote',
    },
    onAddNote: function() {
        var title = this.ui.noteTitle.val();
        var note = this.ui.noteText.val();
        console.log(title, note);
        var db = new PGDatabase();
        db.db.setItem(title, note);
        this.render();
    },
    onViewNote: function(ev) {
        console.log("onViewNote", arguments);
        var db = new PGDatabase();
        var note = db.db.getItem($(ev.target).data("lskey"));
        console.log("la nota", note);
    },
});

var LLLayout = Backbone.Marionette.LayoutView.extend({
        el: '#main-page',
        template: _.template(TplBlob('layout.html')),
        regions: {
            keylist: '#keylist',
        }, 
        onRender: function(options) {
            console.log("render");
            this.getRegion('keylist').show(new KeyListView());
        },

    });

var app = new Backbone.Marionette.Application({});

app.on('start', function(options) {
    var _l = new LLLayout();
    _l.render();
});

app.start();
})(jQuery, Backbone, Backbone.Marionette, _);

